# -*- coding: utf-8 -*-
"""Breast Cancer Classification

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1trwV-mhYPX4mD5rFAdaCKJULyzlLvr_a

# Breast Cancer Classification
Predict whether a tumor is benign or malignant.

Identify correlations between the following 9 independent variables and the class of the tumor (benign or malignant).

*   Clump Thickness

*   Uniformity of Cell size

*   Uniformity of cell shape
*   Marginal adhesion

*   Single epithelial cell
*   Bare Nuclei

*   Bland chromatin
*   Normal nucleoli
*   Mitosis

## Importing the libraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

"""## Importing the dataset"""

df = pd.read_csv('breast_cancer.csv')
X = df.iloc[:, 1:-1].values
y = df.iloc[:, -1].values

df.head()

df.info()

"""## Splitting the dataset into the Training set and Test set"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0)

"""## Training the Logistic Regression model on the Training set"""

from sklearn.linear_model import LogisticRegression
classifier = LogisticRegression(random_state = 0)
classifier.fit(X_train, y_train)

"""## Predicting the Test set results"""

y_pred = classifier.predict(X_test)

"""## Making the Confusion Matrix"""

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test, y_pred)
print(cm)

"""## Computing the accuracy with k-Fold Cross Validation"""

from sklearn.model_selection import cross_val_score
accuracies = cross_val_score(estimator = classifier, X = X_train, y = y_train, cv = 10)
print("Accuracy: {:.2f} %".format(accuracies.mean()*100))
print("Standard Deviation: {:.2f} %".format(accuracies.std()*100))

